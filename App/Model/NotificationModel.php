<?php
/**
 * Created by PhpStorm.
 * User: shellvon
 * Date: 16/6/13
 * Time: 下午5:54.
 */

namespace Model;

use MicroMan\MicroModel;

class NotificationModel extends MicroModel
{
    /**
     * 提醒,操作日志之类的.
     */
    const NOTIFICATION_TYPE_REMIND = 1;

    /**
     * 系统消息,.
     */
    const NOTIFICATION_TYPE_SYS_MESSAGE = 2;

    public static $ALL_SUPPORTED_TYPE_MAP = array(
        self::NOTIFICATION_TYPE_REMIND => '提醒',
        self::NOTIFICATION_TYPE_SYS_MESSAGE => '系统消息',
    );

    /**
     * 定义一些常用的动作常量.
     */
    const ACTION_REGISTER = 'register';
    const ACTION_UPDATE_PROFILE = 'update_profile';
    const ACTION_SINGLE_DEAL = 'single_deal';
    const ACTION_BATCH_DEAL = 'batch_deal';
    const ACTION_UPDATE_DEAL = 'update_deal';
    const ACTION_INSERT_DEAL = 'insert_deal';

    public static $ALL_ACTION_MAP = array(
        self::ACTION_REGISTER => '注册新用户',
        self::ACTION_UPDATE_PROFILE => '修改个人资料',
        self::ACTION_SINGLE_DEAL => '单个结算',
        self::ACTION_BATCH_DEAL => '批量结算',
        self::ACTION_UPDATE_DEAL => '更新记账单',
        self::ACTION_INSERT_DEAL => '插入新记账单',
    );

    /**
     * 表名.
     */
    const TABLE_NAME = 'notification';

    /**
     * @return static
     */
    public static function getInstance()
    {
        return parent::createInstance(__CLASS__); // TODO: Change the autogenerated stub
    }

    public function getTableName()
    {
        return self::TABLE_NAME; // TODO: Change the autogenerated stub
    }

    /**
     * 创建一条通知.
     *
     * @param int    $sender  发送人ID.
     * @param string $content 消息内容.
     * @param string $action  操作动作.
     * @param int    $type    类型.
     * @param int    $time    发送时间.
     *
     * @return false|int
     */
    public function createNotification($sender, $content, $action, $type = self::NOTIFICATION_TYPE_REMIND, $time = null)
    {
        if (!in_array($type, array_keys(self::$ALL_SUPPORTED_TYPE_MAP), true)) {
            throw new \LogicException('不支持的消息类型');
        }
        $time = empty($time) ? time() : $time;

        return $this->insert(array(
            'sender' => $sender,
            'content' => $content,
            'action' => $action,
            'type' => $type,
            'create_time' => $time,
        ));
    }
}
